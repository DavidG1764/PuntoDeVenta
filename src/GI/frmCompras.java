/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
//Made by MSD
package GI;

import Control.PrCompras;
import Control.PrProveedores;
import Modelo.compras;
import Modelo.proveedores;
import java.io.IOException;
import javax.swing.JOptionPane;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.ImageIcon;
import Control.PrStock;
import Modelo.stock;
import java.io.FileWriter;
import java.util.ArrayList;

/**
 *
 * @author salom
 */

public class frmCompras extends javax.swing.JFrame {

    /**
     * Creates new form frmCompras
     */
    PrStock objs=new PrStock();
    PrProveedores objp=new PrProveedores();
    PrCompras objcr=new PrCompras();
    public frmCompras() {
        initComponents();
        cargar_datos();
        cbxProveedores.setSelectedIndex(1);
        this.setTitle("Compras");
        this.setIconImage(new ImageIcon(getClass().getResource("/img/provedor.png")).getImage());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        btnPedir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbxProveedores = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        rdb1 = new javax.swing.JRadioButton();
        rdb2 = new javax.swing.JRadioButton();
        rdb3 = new javax.swing.JRadioButton();
        btnRegresar = new javax.swing.JButton();
        cbxAlbum = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnPedir.setBackground(new java.awt.Color(119, 221, 119));
        btnPedir.setText("Pedir a proveedor");
        btnPedir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPedirActionPerformed(evt);
            }
        });

        jLabel1.setText("Elige el proveedor");

        cbxProveedores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLabel2.setText("Cantidad de discos");

        buttonGroup1.add(rdb1);
        rdb1.setText("Dia siguiente");

        buttonGroup1.add(rdb2);
        rdb2.setText("1 Semana");

        buttonGroup1.add(rdb3);
        rdb3.setText("1 mes");

        btnRegresar.setBackground(new java.awt.Color(132, 182, 244));
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        cbxAlbum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Clancy", "Regional At Best", "Te New Abnormal", "Romances" }));

        jLabel3.setText("Elige el album");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rdb2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rdb3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(rdb1)
                        .addComponent(jLabel2)
                        .addComponent(cbxAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addComponent(btnRegresar)
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(btnPedir))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(cbxProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnRegresar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rdb1)
                .addGap(18, 18, 18)
                .addComponent(rdb2)
                .addGap(18, 18, 18)
                .addComponent(rdb3)
                .addGap(41, 41, 41)
                .addComponent(btnPedir)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPedirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPedirActionPerformed
        // TODO add your handling code here:
        if(!"0".equals(cbxProveedores.getSelectedIndex())&& !"".equals(txtCantidad.getText())){
            LocalDate fechita= LocalDate.now();
            DateTimeFormatter formatito=DateTimeFormatter.ofPattern("dd/MM/yyyy");
            String fechaformato=fechita.format(formatito);
            String album=cbxAlbum.getSelectedItem().toString();
            if(rdb1.isSelected()){
                fechaformato=fechaformato +" Para el dia siguiente";
            }
            if(rdb2.isSelected()){
                fechaformato=fechaformato+ " Dentro de una semana";
            }
            if(rdb3.isSelected()){
                fechaformato=fechaformato+ " Dentro de un mes";
            }
            
            insertar(cbxProveedores.getSelectedItem().toString(),txtCantidad.getText(),album,fechaformato);
        }else{
            JOptionPane.showMessageDialog(rootPane, "Porfavor llena todos los datos");
        }
    }//GEN-LAST:event_btnPedirActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
        Main regreso=new Main();
        regreso.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCompras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPedir;
    private javax.swing.JButton btnRegresar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxAlbum;
    private javax.swing.JComboBox<String> cbxProveedores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton rdb1;
    private javax.swing.JRadioButton rdb2;
    private javax.swing.JRadioButton rdb3;
    private javax.swing.JTextField txtCantidad;
    // End of variables declaration//GEN-END:variables
    private void cargar_datos(){
        boolean carga=false;
        try{
            String prov="";
            objp.leer();
            for(proveedores e:objp.array){
                prov=e.getNombre();
                cbxProveedores.addItem(prov);
                carga=true;
            }
        }catch(IOException e){
            System.err.println(e);
        }
        if (!carga){
            JOptionPane.showMessageDialog(rootPane, "Hubo un problema al cargar los datos");
        }
    }
    private void insertar(String proveedores,String cantidad,String album,String fecha){
        String proveedoresu=proveedores;
        String cantidadu=cantidad;
        String fechau=fecha;
        String albumu=album;
        compras objc=new compras(proveedoresu,cantidadu,albumu,fechau);
        boolean success=false;
        try{
            objcr.insertar(objc);
            success=true;
        }catch (IOException e){
            System.err.println(e);
        }
        if(success){
            int i=cbxAlbum.getSelectedIndex();
            switch(i){
                case 0 -> {
                    stockClancy(Integer.parseInt(txtCantidad.getText()));
                }
                case 1->{
                    stockRab(Integer.parseInt(txtCantidad.getText()));
                }
                case 2->{
                    stockThe(Integer.parseInt(txtCantidad.getText()));
                }
                case 3->{
                    stockLuis(Integer.parseInt(txtCantidad.getText()));
                
                }
            }
            JOptionPane.showMessageDialog(rootPane, "Infromacion agregada a la base de datos");
        }else{
            JOptionPane.showMessageDialog(rootPane, "Ocurrion un error");
        }
    }
    public void escribirActualizado(ArrayList<stock> stock)throws IOException{
        FileWriter fw=new FileWriter("Documentos\\BD_STOCK.txt",false);
        for(stock e:stock){
            String cad=e.getDisco()+"-"+e.getCantidad();
            fw.write(cad);
            fw.write(10);
        }
        fw.close();
    }
    public void stockClancy(int disco_res){
        int rest=disco_res;
        int newtotal=0;
        try{
            objs.leer();
            ArrayList<stock> actualizacion=new ArrayList<>();
            for(stock e:objs.array){
                if(e.getDisco().equals("Clancy")){
                newtotal=Integer.parseInt(e.getCantidad())+rest;
                e.setDisco("Clancy");
                e.setCantidad(String.valueOf(newtotal));
                }
                actualizacion.add(e);
            }
            escribirActualizado(actualizacion);
        }catch(IOException e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        
        }
    }
    public void stockRab(int disco_res){
        int rest=disco_res;
        int newtotal=0;
        try{
            objs.leer();
            ArrayList<stock> actualizacion=new ArrayList<>();
            for(stock e:objs.array){
                if(e.getDisco().equals("Rab")){
                newtotal=Integer.parseInt(e.getCantidad())+rest;
                e.setDisco("Rab");
                e.setCantidad(String.valueOf(newtotal));
                }
                actualizacion.add(e);
            }
            escribirActualizado(actualizacion);
        }catch(IOException e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        
        }
    }
    private void stockThe(int disco_res){
        int rest=disco_res;
        int newtotal=0;
        try{
            objs.leer();
            ArrayList<stock> actualizacion=new ArrayList<>();
            for(stock e:objs.array){
                if(e.getDisco().equals("Tna")){
                newtotal=Integer.parseInt(e.getCantidad())+rest;
                e.setDisco("Tna");
                e.setCantidad(String.valueOf(newtotal));
                }
                actualizacion.add(e);
            }
            escribirActualizado(actualizacion);
        }catch(IOException e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        
        }
    }
    private void stockLuis(int disco_res){
        int rest=disco_res;
        int newtotal=0;
        try{
            objs.leer();
            ArrayList<stock> actualizacion=new ArrayList<>();
            for(stock e:objs.array){
                if(e.getDisco().equals("Romances")){
                newtotal=Integer.parseInt(e.getCantidad())+rest;
                e.setDisco("Romances");
                e.setCantidad(String.valueOf(newtotal));
                }
                actualizacion.add(e);
            }
            escribirActualizado(actualizacion);
        }catch(IOException e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        
        }
    }
}
